---
# - hosts: local
# - name: load ssh key
#   shell: |
#       ssh-add ~/.ssh/id_rsa

- hosts: all
  remote_user: root
  become: yes
  gather_facts: True

  tasks:
    - name: Add universe repository for bionic
      apt_repository:
        repo: deb http://archive.ubuntu.com/ubuntu bionic universe
        state: present
      when: ansible_distribution_release == 'bionic'

    - name: Install base packages
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - locales
          - build-essential
          - htop
          - git
          - python3-apt
          - python3-pip
          - supervisor
          # - redis-server
          - rabbitmq-server
          - postgresql
          - libpq-dev
          - python-psycopg2
          - ufw
          - psmisc
          - curl

    - name: Install psycopg2
      pip:
        name: psycopg2
        state: present

    - name: Ensure PostgreSQL service is running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: install setfacl support to enable ansible create temporary files
      become: yes
      apt: pkg=acl

    - name: Create database
      become: yes
      become_user: postgres
      become_method: sudo
      postgresql_db:
        name: biashara
        state: present

    - name: Ensure user has access to db
      become: yes
      become_user: postgres
      postgresql_user:
        db: biashara
        name: admin
        password: admin
        priv: ALL
        state: present

    # - name: Check if SSH key is already present
    #   stat:
    #     path: "~/.ssh/id_rsa.git"
    #   register: key_stat_result

    # - name: Generate SSH key for accessing GitHub
    #   command: "ssh-keygen -t rsa -f ~/.ssh/id_rsa.git -N ''"
    #   when: not key_stat_result.stat.exists

    # - name: Get key content
    #   command: "cat ~/.ssh/id_rsa.git.pub"
    #   register: key_content

    # - name: Check if known_host exists
    #   stat:
    #     path: "~/.ssh/known_hosts"
    #   register: known_hosts_stat

    # - name: Create known_hosts if it doesn't exist
    #   file:
    #     path: "~/.ssh/known_hosts"
    #     state: touch
    #   when: not known_hosts_stat.stat.exists

    # - name: Get the content of known hosts
    #   shell: "cat ~/.ssh/known_hosts | grep github.com"
    #   register: host_stat
    #   failed_when: host_stat.rc > 1

    # - name: Modify known hosts
    #   block:
    #     - name: Fetch GitHub public key
    #       command: ssh-keyscan -T 10 github.com
    #       register: keyscan

    #     - name: Add GitHub public key to ssh known_hosts
    #       lineinfile:
    #         path: "~/.ssh/known_hosts"
    #         create: yes
    #         line: "{{ item }}"
    #       with_items: "{{ keyscan.stdout_lines }}"
    #   when: host_stat.rc == 1

    # - name: Add SSH public key to GitHub account
    #   uri:
    #     url: https://api.github.com/samsonmuoki/keys
    #     validate_certs: no
    #     method: POST
    #     body:
    #       title: "id_rsa.git"
    #       key: "{{ key_content.stdout }}"
    #     body_format: json
    #     headers:
    #       Content-Type: "application/json"
    #       Authorization: "token {{ GITHUB_PERSONAL_ACCESS_TOKEN }}"
    #   register: task_log
    #   failed_when: task_log.content.find('key is already in use') == 0

    - name: Create project directory
      file:
        state: directory
        path: project

    - name: Pull project from github
      git:
        repo: "https://github.com/samsonmuoki/biashara-smart.git"
        dest: project/
        version: start-rent-management-app
        force: yes
      #   accept_hostkey: yes
      # become: no

    - name: Copy env.sh to server
      copy:
        src: /home/sam/Desktop/Biashara/biashara-smart/env.sh
        dest: /home/sam/project/
        mode: 0766

    - name: Stop supervisor
      service:
        name: supervisor
        state: stopped

    - name: Install virtualenv
      pip:
        name: virtualenv
        executable: pip3
      become: yes
      become_user: root

    - name: Create virtualenv
      command: /usr/local/bin/virtualenv project/venv
    
    - name: Copy requirements files to server
      copy:
        src: /home/sam/Desktop/Biashara/biashara-smart/requirements/
        dest: /home/sam/project/
        mode: 0766

    - name: Installing requirements
      pip:
        requirements: /home/sam/project/requirements/requirements_main.txt
        virtualenv: /home/sam/project/venv
        virtualenv_python: python3.6

    - name: Activate venv and make migrations
      shell: |
        . /home/sam/project/env.sh
        . /home/sam/project/venv/bin/activate
        python3 /home/sam/project/biashara_smart/manage.py migrate

    - name: Collect static
      shell: |
        . /home/sam/project/env.sh
        . /home/sam/project/venv/bin/activate
        python3 /home/sam/project/biashara_smart/manage.py collectstatic --noinput

    - name: Recursively change ownership of biashara_smart directory
      file:
        path: /home/sam/project/biashara_smart
        state: directory
        recurse: yes
        owner: sam
